---
apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: source
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.2.0
    init: confluentinc/confluent-init-container:2.5.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: source
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.2.0
    init: confluentinc/confluent-init-container:2.5.0
  dataVolumeCapacity: 10Gi
  services:
    kafkaRest:
  metricReporter:
    enabled: true
  dependencies:
    zookeeper:
      endpoint: zookeeper.source.svc.cluster.local:2181
    kafkaRest:
      bootstrapEndpoint: kafka.source.svc.cluster.local:9092
  passwordEncoder:
    secretRef: myencodersecret
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaTopic
metadata:
  name: demo
  namespace: source
spec:
  replicas: 3
  partitionCount: 4
  configs:
    cleanup.policy: "delete"
  kafkaRestClassRef:
    name: source-restclass
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: source
spec:
  replicas: 1
  podTemplate:
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500
    resources:
      requests:
        memory: "8Gi"
        cpu: "2000m"
  image:
    application: confluentinc/cp-enterprise-control-center:7.2.0
    init: confluentinc/confluent-init-container:2.5.0
  dataVolumeCapacity: 10Gi
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.source.svc.cluster.local:9092
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: source-restclass
  namespace: source
spec:
  kafkaClusterRef:
    name: kafka
  kafkaRest:
    endpoint: http://kafka.source.svc.cluster.local:8090
---
